{# google Map #}
<script type="text/javascript" title="Google Map">

  var infowindow;
  var iconDir = {{ asset(img_dir) }};
  var birdIcon = iconDir + "marker-ico-50.png";

  function initMap() {
    
    // Center of France Position : {lat: 46.52863469527167, lng: 2.43896484375}
    var centerFrancePosition = {lat: 46.52863469527167, lng: 2.43896484375};
    var obsPosition = centerFrancePosition;


    // initilize the map
    var map = new google.maps.Map(document.getElementById('map'), {
      center: obsPosition,
      zoom: 5,
      // map types : roadmap, satellite, hybrid, terrain
      mapTypeId: 'roadmap',
      maxZoom: {{ gmap_max_zoom }},
      minZoom: 3 
    })

    // Trying to geolocalize user to center marker and map near user location
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        obsPosition = {lat: position.coords.latitude, lng: position.coords.longitude};
        obsMarker.setPosition(obsPosition);
        map.setCenter(obsPosition);
      }, function() {
        console.log('Error: The Geolocation service failed.');
      });
    } else {
      console.log('Error: Your browser doesn\'t support geolocation.');
    }

    // Geocoder to move marker on typed address (find geoloc datas)
    var geocoder = new google.maps.Geocoder();

    document.querySelector("input[id*='_place']").addEventListener('input', function() {
      if (this.value.length > 2)
      {
        geocodeAddress(geocoder, map);
      }
    });

    document.getElementById("centerMapFrance").addEventListener('click', function() {
      map.setCenter(centerFrancePosition);
      map.setZoom(5);
      $("input[id*='_place']").val(null);
    });



    // Setting markerCluster Options
    var clusterStyles = [
      {
        textColor: 'white',
        url: "{{ asset('/img/cluster-50b.png') }}",
        height: 50,
        width: 50
      },
      {
        textColor: 'white',
        url: "{{ asset('/img/cluster-60b.png') }}",
        height: 60,
        width: 60
      },
      {
        textColor: 'white',
        url: "{{ asset('/img/cluster-70b.png') }}",
        height: 70,
        width: 70
      },
      {
        textColor: 'white',
        url: "{{ asset('/img/cluster-80b.png') }}",
        height: 80,
        width: 80
      },
      {
        textColor: 'white',
        url: "{{ asset('/img/cluster-100b.png') }}",
        height: 100,
        width: 100
      }
    ];

  var infowindow = new google.maps.InfoWindow({
    maxWidth: 400
  });   

  var obsList = {{ obsJson|raw }};

  var markers = obsList.map(function(obs, i) {
    var marker = new google.maps.Marker({
      icon: birdIcon,
      lat: parseFloat(obsList[i].latitude),
      lng: parseFloat(obsList[i].longitude),
      position: {lat: parseFloat(obsList[i].latitude), lng: parseFloat(obsList[i].longitude)},
      title: obsList[i].birdName,
      url: obsList[i].url,
      id: obsList[i].id,
      label: obsList[i].nbBirds.toString()
    });
    google.maps.event.addListener(marker, 'click', function() {
      //window.location.href = this.url;
      infowindow.setContent(setObsWinInfos(obsList[i]));
      infowindow.open(map, marker);
    });
    return marker;
  });

  var myMarkers = markers;

  // Add a marker clusterer to manage the markers.
  var markerCluster = new MarkerClusterer(map, markers, {
    styles: clusterStyles,
    ignoreHidden: false,
    maxZoom: {{ gmap_max_zoom + 1 }}
  });

  $('.gmarker').hover(function() 
  {
    markerCluster.clearMarkers();
    for(var i= 0; i < myMarkers.length; i++)
    {
      myMarkers[i].setMap(null);
      if (myMarkers[i].id == this.getAttribute('gmarker'))
      {
        myMarkers[i].setMap(map);
        map.setCenter(myMarkers[i].position);
      }
    }
    map.setZoom(6);
  }, function()
    {
      for(var i= 0; i < myMarkers.length; i++)
      {
        myMarkers[i].setMap(null);
      }
      markers = myMarkers;
      markerCluster.addMarkers(markers, {
        styles: clusterStyles,
        ignoreHidden: false
      });
      markerCluster.redraw();
      map.setCenter(centerFrancePosition);
      map.setZoom(5);
    }         
  );   
   
}


function geocodeAddress(geocoder, resultsMap) {
  var address = document.querySelector("input[id*='_place']").value;
  geocoder.geocode({
      'address': address,
      'region': 'fr'
      // 'componentRestrictions': {country: 'FR'}
      }, function(results, status) {
    if (status === 'OK') {
      resultsMap.setCenter(results[0].geometry.location);
      resultsMap.setZoom(10);
    } else {
      console.log('Geocode was not successful for the following reason: ' + status);
    }
  });
}


function setObsWinInfos(obs) {
  var imageDefault = "{{ asset(file_image_obs_default) }}";
  if (obs.imageUrl == "default")
  {
    obs.imageUrl = imageDefault;
  }
  else
  {
    obs.imageUrl = "/" + obs.imageUrl;
  }

  var template = '<div class="media obs-media-in-map">' +
                    '<div class="media-left media-top">' +
                           ' <a href="' + obs.obsUrl + '">' +
                              '<div class="obs-image-media" style="background: url(' + obs.imageUrl + ');"></div>' +
                            '</a>' +
                          '</div>' +
                          '<div class="media-body">' +
                            '<a href="' + obs.obsUrl + '">' +
                              '<h4 class="media-heading">' + obs.birdName + '</h4>' +
                          '</a>' +
                            '<p>' + obs.nameValid + '</p>' +
                          '</div>' +
                        '</div>'
  ;
  return template;
}

</script>
{# Google MAP API #}
<script src="https://maps.googleapis.com/maps/api/js?key={{ google_map_api }}&callback=initMap" async defer></script>
<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
</script>